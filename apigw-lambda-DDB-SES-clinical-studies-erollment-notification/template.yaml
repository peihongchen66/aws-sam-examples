#Before deploy this template to your account, you need to create and verify SES identities for your source email address
#If your SES is in Sandbox mode, destination emails identities need to be created and verified as well.
#If your SES is in production mode, you don't need to create identities for designation emails.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  clinical-studies

  Sample SAM Template for clinical-studies

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 120
    MemorySize: 516
  #Api:
    #Cors:
      #AllowMethods: "'GET,POST,OPTIONS'"
      #AllowHeaders: "'content-type', 'x-api-key'"
      #AllowOrigin: "'*'"

Resources:
  GetStudiesFunction:
    Type: AWS::Serverless::Function 
    FunctionName: GetStudyLambdaFunction
    Properties:
      CodeUri: func_get_studies/
      Handler: app.lambda_handler
      Runtime: python3.9
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python39:21
      Architectures:
        - x86_64
      Events:
        StudyRefreshScheduleEvent:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: rate(1440 minute) #once a day
            FlexibleTimeWindow:
              Mode: FLEXIBLE
              MaximumWindowInMinutes: 5
            StartDate: '2024-08-09T23:30:00.000Z'
            EndDate: '2024-08-10T08:30:00.000Z'
            ScheduleExpressionTimezone: EST
            RetryPolicy:
              MaximumRetryAttempts: 1
              MaximumEventAgeInSeconds: 300
    Connectors:
      StudyTableConn:
        Properties:
          Destination:
            Id: StudyTable
          Permissions:
            - Read
            - Write

  StudyStatusChangeFunction:
    Type: AWS::Serverless::Function 
    FunctionName: StudyStatusChangeLambdaFunction
    Properties:
      CodeUri: func_study_status_change/
      Handler: app.lambda_handler
      Runtime: python3.9
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python39:21
      Architectures:
        - x86_64
      Events:
        DDBEvent:
          Type: DynamoDB
          Properties:
            Stream: 
              !GetAtt StudyTable.StreamArn   # This must be the name of a DynamoDB table declared in the same template file
            StartingPosition: TRIM_HORIZON
            BatchSize: 10
            Enabled: false
            MaximumRecordAgeInSeconds: 600
            MaximumRetryAttempts: 2
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref StudyTable
        - SESCrudPolicy:
            IdentityName: test1@example.com # change to your sender email
        - SESCrudPolicy:
            IdentityName: test2@example.com # change to your test receiver email
    
  StudyTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete  # Change to Retain if you would like to keep the data in the table
    Properties:
      TableName: StudyDynamoTable
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
      StreamSpecification:
        StreamViewType:  NEW_AND_OLD_IMAGES

  StudyEnrollmentNotificationS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      #AccessControl: PublicRead
      BucketName: clinical-study-enrollment-notification-bucket
      MetricsConfigurations:
        - Id: EntireBucket
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false  

  StaticWebsiteHostingBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref StudyEnrollmentNotificationS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref StudyEnrollmentNotificationS3Bucket
                - /*  

  NoticationSignUpApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      #Auth:
        #ApiKeyRequired: true # sets for all methods
        #UsagePlan:
          #CreateUsagePlan: PER_API
          #UsagePlanName: GatewayAuthorization

  NoticationSignUpFunction:
    Type: AWS::Serverless::Function
    Description: 'Rest API that takes study enrollment notification sign up information and save to study table'
    Properties:
      FunctionName: NotificationSignUpLambdaFunction
      Handler: app.lambda_handler
      Runtime: python3.9
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python39:21
      CodeUri: func_notification_signup/
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref StudyTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref NoticationSignUpApi
            Path: /
            Method: any
            #Auth:
              #ApiKeyRequired: true
        
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  GetStudiesFunction:
    Description: "Get Studies Lambda Function ARN"
    Value: !GetAtt GetStudiesFunction.Arn
  GetStudiesFunctionIamRole:
    Description: "Implicit IAM Role created for Get Studies function"
    Value: !GetAtt GetStudiesFunctionRole.Arn
  StudyStatusChangeFunction:
    Description: "Process study status changes from StudyTable stream"
    Value: !GetAtt StudyStatusChangeFunction.Arn
  StudyStatusChangeFunctionIamRole:
    Description: "Implicit IAM Role created for Study Status Change function"
    Value: !GetAtt StudyStatusChangeFunctionRole.Arn
  StudyTable:
    Description: "Study DynamoDB Table ARN"
    Value: !GetAtt StudyTable.Arn
  WebsiteURL:
    Value: !GetAtt
      - StudyEnrollmentNotificationS3Bucket
      - WebsiteURL
    Description: URL for website hosted on S3
  EndpointUrl:
    Description: 'HTTP REST endpoint URL'
    Value: !Sub 'https://${NoticationSignUpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'
  #ApiKey:
    #Description: "You can find your API Key in the AWS console: (Put in the request HEADER as 'x-api-key')"
    #Value: !Sub "https://console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/api-keys/${NoticationSignUpApiApiKey}"
